plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'jacoco'
    id 'com.google.gms.google-services'
    id 'kotlin-android-extensions'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.github.h3lp3rs.h3lp"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true' // Reset app state before tests
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.3'
    implementation 'com.google.firebase:firebase-storage-ktx:20.0.1'
    implementation 'com.google.android.gms:play-services-auth:20.1.0'
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'
    implementation 'com.opencsv:opencsv:5.3'
    implementation 'com.google.firebase:firebase-database-ktx:20.0.4'
    implementation 'com.google.maps.android:android-maps-utils:2.1.0'
    implementation("androidx.work:work-runtime:2.7.1") {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }
    implementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    implementation("androidx.fragment:fragment-ktx:1.4.1")
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    testImplementation "org.mockito:mockito-core:3.9.0"
    testImplementation 'org.json:json:20180813'
    testImplementation("org.hamcrest:hamcrest:2.2")
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.6.0"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.6.0"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    // Added for drawer layout testing
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
    // Required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:3.9.0'
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-android:3.2.0'
    // required for the implementation of the app guide
    implementation 'uk.co.samuelwall:material-tap-target-prompt:3.3.2'
    // required for the preferences Manager
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'com.google.android.material:material:1.2.0-alpha03'
    implementation 'com.akexorcist:google-direction-library:1.2.0'
    // Material Design
    implementation 'com.google.android.material:material:1.5.0'
    // Palette
    implementation 'androidx.palette:palette-ktx:1.0.0'
    // support module for recycler views
    implementation 'com.xwray:groupie:2.1.0'
    implementation "androidx.cardview:cardview:1.0.0"
    //noinspection GradleCompatible
    implementation 'com.android.support:cardview-v7:28.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'


    implementation('com.lamudi.phonefield:phone-field:0.1.3@aar') {
        transitive = true
    }

    implementation "androidx.security:security-crypto:1.1.0-alpha03"
    // For Identity Credential APIs
    implementation "androidx.security:security-identity-credential:1.0.0-alpha03"
    // For App Authentication APIs
    implementation "androidx.security:security-app-authenticator:1.0.0-alpha02"
    // For App Authentication API testing
    androidTestImplementation "androidx.security:security-app-authenticator:1.0.0-alpha02"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            // Exclude Hilt generated classes
            '**/*Hilt*.*',
            'hilt_aggregated_deps/**',
            '**/*_Factory.class',
            '**/*_MembersInjector.class'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
            'outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec',
            'outputs/code_coverage/debugAndroidTest/connected/*coverage.ec'
    ]))
}

connectedCheck {
    finalizedBy jacocoTestReport
}

apply plugin: 'com.google.gms.google-services'